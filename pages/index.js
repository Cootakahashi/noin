import Head from "next/head";
import Image from "next/image";
import Link from "next/link";
import { Inter } from "@next/font/google";
import styles from "../styles/Home.module.css";
import { client } from "../libs/client";
import { Nav } from "../components/header";
import { Footer } from "../components/footer";
import { Event } from "../components/event";
import Script from "next/script";
import * as gtag from "../lib/gtag";
//SSG
import React, { useState, useEffect } from "react";

export const getStaticProps = async () => {
  const data = await client.get({ endpoint: "noin" });
  return {
    props: {
      blog: data.contents,
    },
  };
};

export default function Home({ blog }) {
  useEffect(() => {
    const navitem = window.document.querySelector(".nav-item");
    navitem.classList.add("show");
  });
  //Microcmsの画像を使うときはloaderかnext.config設定が必要
  const microCMSLoader = ({ src, width, quality }) => {
    return `${src}?auto=format&fit=max&w=${width}`;
  };
  return (
    <>
      <Head>
        <Script
          strategy="afterInteractive"
          src={`https://www.googletagmanager.com/gtag/js?id=${gtag.GA_MEASUREMENT_ID}`}
        />
        <Script
          id="gtag-init"
          strategy="afterInteractive"
          dangerouslySetInnerHTML={{
            __html: `
           window.dataLayer = window.dataLayer || [];
           function gtag(){dataLayer.push(arguments);}
           gtag('js', new Date());
 
           gtag('config', '${gtag.GA_MEASUREMENT_ID}');
           `,
          }}
        />
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <Nav />
      <main className={styles.main}>
        <Image src="/canva/top.png" height={600} width={1300} alt="content" />

        <h2 className="m-10 p-10 text-center font-sans font-thin text-5xl">
          Newest Article
        </h2>

        <div className="grid grid-cols-3 gap-8 w-full text-center">
          {blog.map((d) => {
            const a = d.thumbnail.url;
            return (
              <div>
                <Link key={d.id} href={`/blog/${d.id}`}>
                  <div>
                    <Image
                      loader={microCMSLoader}
                      src={a}
                      height={500}
                      width={300}
                      alt="content"
                    />
                  </div>
                  <div>:{d.title}</div>
                </Link>
              </div>
            );
          })}
        </div>
      </main>
      <Event />
      <Footer />
    </>
  );
}
